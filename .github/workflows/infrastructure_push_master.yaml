name: Apply Infrastructure Changes

# Build a plan on every PR against and push to master
# Additionally, apply the plan on every push to master
on: 
  push:
    branches:
      - master
    paths:
      - infrastructure/*

env:
  WORKING_DIRECTORY: ./infrastructure

jobs:
  create-plan:
    name: Generate Terraform Plan
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Set up Terraform
        uses: jcuffe/setup-terraform@v2
      
      - name: Verify format
        run: terraform fmt

      - name: Initialize Terraform
        run: terraform init

      - name: Generate Plan
        run: terraform plan -out=tfplan
        env:
          TF_VAR_project: ${{ secrets.GCP_PROJECT }}

      - name: Store plan for application
        uses: actions/upload-artifact@v2
        with:
          name: tfplan
          path: ${{ env.WORKING_DIRECTORY }}/tfplan
  
  apply-plan:
    name: Apply Generated Terraform Plan
    runs-on: ubuntu-latest

    # Wait for the latest plan before applying
    needs: create-plan 

    # Require manual approval for this job to proceed
    environment: Production 

    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Set up Terraform
        uses: jcuffe/setup-terraform@v1
      
      - name: Download existing Terraform plan
        uses: actions/download-artifact@v2
        with:
          name: tfplan
          path: ${{ env.WORKING_DIRECTORY }}

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Plan
        run: terraform apply -auto-approve tfplan